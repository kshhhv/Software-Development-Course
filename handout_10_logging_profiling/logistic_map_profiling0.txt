Wrote profile results to profile_logistic_map.py.lprof
Timer unit: 1e-06 s

Total time: 0.0686413 s
File: profile_logistic_map.py
Function: logistic_map at line 20

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    20                                           @profile
    21                                           def logistic_map(x0, r, n):
    22                                               
    23                                               """
    24                                               Computes the logistic map sequence for a given initial condition, growth rate and number or iterations
    25                                           
    26                                               x_{n+1} = r * x_n * (1 - x_n)
    27                                           
    28                                               Paramerters
    29                                               -----------
    30                                               x0: float
    31                                                   Initial value of the sequence
    32                                               r: float
    33                                                   Growth rate parameter
    34                                               n: int
    35                                                   Number of iterations to calculate
    36                                           
    37                                               Returns
    38                                               -------
    39                                           
    40                                               xs: array of length n
    41                                                   Arrays of the values generated by the logistic map
    42                                           
    43                                               """
    44                                           
    45      2500        706.4      0.3      1.0      xs = np.empty((n))
    46      2500        396.3      0.2      0.6      xs[0] = x0
    47                                           
    48    125000      10147.6      0.1     14.8      for i in range(1, n):
    49                                           
    50    122500      17307.1      0.1     25.2          xn = xs[i-1]
    51    122500      23804.3      0.2     34.7          xnp1 = r*xn*(1-xn)
    52    122500      15810.3      0.1     23.0          xs[i] = xnp1
    53                                           
    54                                                   #xnp1 = r*xs[i-1]*(1-xs[i-1])
    55                                                   # xs[i] = r*xs[i-1]*(1-xs[i-1])
    56                                           
    57      2500        469.2      0.2      0.7      return xs

